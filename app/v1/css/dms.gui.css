html, body {
	font-family: Calibri;
	height: 100%;
}


ul {
	list-style: none;
	padding-left: 25px;
}

.ind > li {
	display: inline-block;
}

li > div[open="0"] + ul {
	display: none;
}

ul > :not(:last-child) > ln {
	display: inline-block;
	position: absolute;
	height: 100%;
}

	ul > :not(:last-child) > ln:after {
		content: "";
		display: inline-block;
		position: absolute;
		height: 100%;
		left: -12px;
		top: 15px;
		width: 10px;
		border-left: dotted 1px #ccc;
		border-bottom: dotted 1px #ccc;
		/*border-top: dotted 1px #ccc;*/
	}

ul > :first-child > ln:before {
	content: "";
	display: inline-block;
	position: absolute;
	height: 15px;
	left: -12px;
	top: 0;
	width: 10px;
	border-left: dotted 1px #ccc;
	border-bottom: dotted 1px #ccc;
	/*border-top: dotted 1px #ccc;*/
}

open {
	display: inline-block;
	position: absolute;
	left: -15px;
	top: 10px;
	width: 10px;
	height: 10px;
	border: solid 1px gray;
	background: white;
	z-index: 10;
}

li > div[open="2"] + ul {
	display: none;
}

#folders li > div {
	line-height: 30px;
	display: block;
}

	#folders li > div > span, li > div > a {
		font-size: 20pt;
		display: inline-block;
		vertical-align: middle;
		cursor: pointer;
	}

.symbol::before {
	content: "";
	display: inline-block;
	width: 30px;
	height: 30px;
	line-height:30px;
	text-align:center;
	font-size:12pt;
	border-radius: 30px;
	/*background-color: #fafafa;*/
	vertical-align: middle;
	margin-right: 10px;
	/*border: solid 1px #ccc;*/
	background-color: rgba(88,186,74,1);
	background-image: radial-gradient(circle, rgb(255,255,255,.3), transparent, rgba(0,0,0,0.5));
}


table .symbol::before {
	width: 10px;
	height: 10px;
}

/*.symbol[Running]:not([Running="0"])::before {
	background-color: rgba(88,186,74,1);
}

.symbol[prewarning_1][value='1']::before,
.symbol[prewarning_2][value='1']::before,
.symbol[prewarning_3][value='1']::before,
.symbol[MeasurementErrorFlag][value='1']::before,
.symbol[Warning][value='1']::before,

.symbol[MeasurementErrorFlag]:not([MeasurementErrorFlag="0"])::before,
.symbol[PreWarning_3]:not([PreWarning_3="0"])::before,
.symbol[PreWarning_2]:not([PreWarning_2="0"])::before,
.symbol[PreWarning_1]:not([PreWarning_1="0"])::before,
.symbol[Warning]:not([Warning="0"])::before {
	background-color: rgba(255,255,0,1);
}*/

.symbol[PreWarning_1][value='1']::before,
.symbol[PreWarning_2][value='1']::before,
.symbol[PreWarning_3][value='1']::before,
.symbol[MeasurementErrorFlag][value='1']::before,
.symbol[Warning][value='1']::before{
	background-color: rgba(255,255,0,1);
}

.symbol[Locking][value='1']::before,
.symbol[Maintenance][value='1']::before,
.symbol[Security][value='1']::before,
.symbol[NonCriticalFailure][value='1']::before{
	background-color: rgb(255,175,0);
}

/*
	.symbol[Locking][value='1']::before,
.symbol[Maintenance][value='1']::before,
.symbol[Security][value='1']::before,
.symbol[NonCriticalFailure][value='1']::before,

.symbol[Locking]:not([Locking="0"])::before,
.symbol[Maintenance]:not([Maintenance="0"])::before,
.symbol[Security]:not([Security="0"])::before,
.symbol[NonCriticalFailure]:not([NonCriticalFailure="0"])::before {
	background-color: rgb(255,175,0);
}*/

.symbol[Running]::before {
	background-color: rgba(88,186,74,1);
}


#folders .symbol[Warning]::before {
	content: attr(Warning);
}

.symbol[Warning]::before {
	background-color: rgba(255,255,0,1);
}

#folders .symbol[NonCriticalFailure]::before {
	content: attr(NonCriticalFailure);
}
.symbol[NonCriticalFailure]::before {
	background-color: rgb(255,175,0);
}

#folders .symbol[CriticalFailure]::before {
	content: attr(CriticalFailure);
	color:white;
}

.symbol[CriticalFailure]::before {
	background-color: rgb(255,0,0);
}

.symbol[CommunicationFailure]:not([CommunicationFailure="0"])::before {
	opacity: 0.5;
}

.symbol.Value[value="0"] {
	visibility: hidden;
}

nav.row.head {
	background: linear-gradient(to right, #e6234b, #f07d00);
	padding: 10px;
}

#index {
	background-color: white;
	padding: 10px;
}


div.row.top {
	background-color: rgba(180,180,180,0.1);
}

#folders {
	max-width: 400px;
	overflow: auto;
}

	#folders div {
		white-space: nowrap;
	}


table {
	border-collapse: collapse;
	font-size: 13pt;
}

tr {
}

td {
	padding: 3px;
}

thead tr {
	background-color: rgba(180,180,180,0.2);
}

#folders div[selected] {
	background-color: yellow;
}

#list tr.alarm[value="1"] {
	color: red;
}

#list tr[hasControlObjectSelected="0"] {
	opacity: 0.5;
}
#list tr[hasControlObject="false"] {
	opacity: 0.5;
}

.row.top button:not([checked]) {
	opacity: 0.6;
}
.popupform {
	font-size: 200%;
	position: fixed;
	margin: auto;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	width: 800px;
	height: 300px;
	background: #ccc;
	border: solid 1px gray;
	padding: 10px;
}

	.popupform button,
	.popupform input {
		font-size: inherit;
	}


li > div[disconnect]:after,
li > div[connecting]:after,
li > div[error_read]:after,
li > div[error]:after {
	position: absolute;
	display: inline-block;
	border-radius: 50px;
	width: 16px;
	height: 16px;
	line-height: 16px;
	text-align: center;
	font-size: 12px;
	left: 15px;
	bottom: 0;
	color: white;
}

li > div[disconnect]:after {
	content: attr(disconnect);
	background-color: rgba(128, 0, 128, 0.4);
}

li > div[connecting]:after {
	content: attr(connecting);
	background-color: rgba(128, 0, 128, 0.6);
}
li > div[error_read]:after {
	content: attr(error_read);
	background-color: rgba(128, 0, 128, 0.8);
}
li > div[error]:after {
	content: attr(error);
	background-color: rgba(128, 0, 128, 1);
}





/*li > div[Disconnected]:after {
	content: attr(ErrorConnecting);
}


li > div:not([Disconnected="0"])[Disconnected]:after {
	content: attr(Disconnected);
}*/


#list tr[state="connecting"] {
	opacity: 0.8;
	color: purple;
}
#list tr[state="error_read"] {
	opacity: 0.6;
	color: purple;
}
#list tr[state="error"] {
	opacity: 0.4;
	color: purple;
}
#list tr[state="disconnect"] {
	opacity: 0.4;
	color: purple;
}
#index li{margin-right:20px;}


#list tr[disabled] {
	opacity:0.5;
	color:gray !important;
}


.statusbar:not(:empty) {
	position: fixed;
	line-height: 22px;
	bottom: 0;
	left: 0;
	z-index: 100;
	max-width: 60%;
	overflow: hidden;
	text-overflow: ellipsis;
	background: #fafafa;
	color: #666;
	border-top: solid 1px #ccc;
	border-right: solid 1px #ccc;
	font-size: 9pt;
	border-top-right-radius: 5px;
	min-width: 400px;
	padding: 0 3px;
}

#list {
	white-space:nowrap;
}